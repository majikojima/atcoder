# [https://atcoder.jp/contests/arc161/tasks/arc161_a]
            
def M_judge(B):
    for i in range(1, len(B) - 1, 2):
        if not (B[i-1] < B[i] and B[i] > B[i+1]):
            return "No"
    return "Yes"

def M_sort(A):
    A.sort()
    print(A)
    B = [0]*len(A)
    half = len(A)//2 + len(A)%2 # 切り上げ
    print(half)
    B[::2] = A[:half] # 偶数番目に小さい値をセット
    print(B)
    B[1::2] = A[half:] # 奇数番目に大きい値をセット
    print(B)
    return B

N = int(input())
A = list(map(int, input().split()))

B = M_sort(A)

print(M_judge(B))

"""
def M_sort の説明

このプログラムは、リスト（箱に番号をつけて数字を並べたもの）を特別な方法で並べ替えるためのものです。ここでは、そのプログラムを少しずつ見ていきましょう。

1. `def M_sort(A):`  
   これは、「M_sortという名前の作業をするよ」と言っています。そして、その作業に必要な材料として、`A`というリストを使います。

2. `A.sort()`  
   これは、「Aの中身を小さい順に並べ替えてね」と命じています。これにより、Aの中にある数字は小さい順に整列されます。

3. `print(A)`  
   これは、「並べ替えた後のAを表示してみて」という命令です。これにより、Aの中身がどのように並べ替えられたのか確認することができます。

4. `B = [0]*len(A)`  
   これは、「新しいリストBを作り、その中に0をAの長さ（中にある数字の数）だけ入れておいてね」という命令です。

5. `half = len(A)//2 + len(A)%2`  
   これは、「Aの中の数字の数を2で割ったあと、もし余りがあれば1を足して、その結果をhalfという名前につけて」という命令です。

6. `print(half)`  
   これは、「halfの中身を表示してね」という命令です。これでhalfの値を確認することができます。

7. `B[::2] = A[:half]`  
   これは、「Aの中の数字のうち、最初からhalfの位置までを取り出し、それをBの偶数番目の位置に入れてね」という命令です。

8. `print(B)`  
   これは、「Bの中身を表示してね」という命令です。これで、一部の数字が入れられた後のBを確認することができます。

9. `B[1::2] = A[half:]`  
   これは、「Aの中の数字のうち、halfの位置から最後までを取り出し、それをBの奇数番目の位置に入れてね」という命令です。

10. `print(B)`  
    これは、「Bの中身を表示してね」という命令です。これで、全ての数字が入れられた後のBを確認することができます。

11. `return B`  
    これは、「作業が終わったら、新しく作ったBを見せてね」という命令です。これにより、
"""

"""
スライスについて

Pythonの配列（リスト）について少し詳しく説明しましょう。特に、`B[::2]`や`B[1::2]`のような記述は「スライス」と呼ばれるPythonの特性を利用しています。

1. `B[::2]`
   
   これは、Bの配列の中から偶数番目（インデックスが0始まりなので、実際は0, 2, 4, 6, ...番目）の要素を取り出す操作を表しています。`::2`という部分がそれを指示しています。`:`の前の空白は「最初から」、後ろの2は「2つおきに」を意味します。

   そして`B[::2] = A[:half]`という式は、「Aの中の数字のうち、最初からhalfの位置までを取り出し、それをBの偶数番目の位置に入れてね」という意味になります。`A[:half]`は、Aの最初からhalfの位置までの要素を取り出すという意味です。

2. `B[1::2]`
   
   これは、Bの配列の中から奇数番目（インデックスが0始まりなので、実際は1, 3, 5, 7, ...番目）の要素を取り出す操作を表しています。`1::2`という部分がそれを指示しています。`:`の前の1は「1番目から（インデックス0から始まるため実際には2番目）」、後ろの2は「2つおきに」を意味します。

   そして`B[1::2] = A[half:]`という式は、「Aの中の数字のうち、halfの位置から最後までを取り出し、それをBの奇数番目の位置に入れてね」という意味になります。`A[half:]`は、Aのhalfの位置から最後までの要素を取り出すという意味です。
"""