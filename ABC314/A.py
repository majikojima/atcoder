pi = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679'
N = int(input())

for i in range(N + 2):
    print(pi[i], end='')

"""
このコードは、小数点を含む円周率`pi`の文字列から、指定された桁数`N`までの数字を表示するためのものです。

1. 最初に、円周率の値を文字列として`pi`に格納しています。
2. `input()`関数を使用して、ユーザーに表示したい桁数`N`を入力してもらいます。入力された値は文字列として返されるので、`int()`関数を使って整数型に変換しています。
3. `for`ループを使用して、`0`から`N+1`までの範囲で繰り返し処理を行います。`N+2`としているのは、円周率の整数部`3`と小数点`.`をカウントするためです。
4. ループの中で、`pi`文字列の`i`番目の文字を`print`関数を使用して表示しています。ここで`end=''`という引数を指定することで、各数字の後に改行を挿入するのではなく、次の数字を同じ行に続けて表示するようにしています。
5. 結果として、円周率の先頭から`N`桁の数字が表示されます。

例：`N=4`を入力すると、`3.1415`という結果が得られます。
"""

# 以下はWA

# from decimal import Decimal, getcontext

# N = int(input())

# getcontext().prec = 102
# pi = Decimal('3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679')

# formatted_pi = format(pi, f".{N}f")

# print(formatted_pi)